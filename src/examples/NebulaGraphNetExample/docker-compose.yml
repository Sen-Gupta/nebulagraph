services:
  # NebulaGraph Dapr Pluggable Component
  nebulagraph-net-component:
    container_name: nebulagraph-net-component
    build:
      context: ../../dapr-pluggable-components
      dockerfile: Dockerfile
    environment:
      - DAPR_COMPONENT_SOCKETS_FOLDER=/var/run
    volumes:
      - socket:/var/run
    networks:
      - nebula-net

  # NebulaGraph .NET Example API
  nebulagraph-net-example:
    build: .
    container_name: nebulagraph-net-example
    ports:
      - "${TEST_API_HOST_PORT:-5090}:${TEST_API_APP_PORT:-80}"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:${TEST_API_APP_PORT:-80}
      - DAPR_HTTP_ENDPOINT=http://nebulagraph-net-example-sidecar:${TEST_API_HTTP_PORT:-3502}
      - DAPR_GRPC_ENDPOINT=http://nebulagraph-net-example-sidecar:${TEST_API_GRPC_PORT:-50002}
    env_file:
      - "../../.env"
    networks:
      - nebula-net
    depends_on:
      - nebulagraph-net-example-sidecar

  # Dapr sidecar for .NET Example API
  nebulagraph-net-example-sidecar:
    image: "ghcr.io/dapr/daprd:latest"
    container_name: nebulagraph-net-example-sidecar
    command: [
      "./daprd",
      "--log-level", "debug",
      "--app-id", "nebulagraph-net-example",
      "--app-port", "${TEST_API_APP_PORT:-80}",
      "--dapr-http-port", "${TEST_API_HTTP_PORT:-3502}",
      "--dapr-grpc-port", "${TEST_API_GRPC_PORT:-50002}",
      "--placement-host-address", "dapr-placement:${DAPR_PLACEMENT_PORT:-50090}",
      "--scheduler-host-address", "dapr-scheduler:${DAPR_SCHEDULER_PORT:-50091}",
      "--resources-path", "/components",
      "--config", "/components/config.yaml"
    ]
    environment:
      - DAPR_COMPONENTS_SOCKETS_FOLDER=/var/run
    env_file:
      - "../../.env"
    depends_on:
      - nebulagraph-net-component
    volumes:
      - socket:/var/run
      - "../../components:/components:ro"
      - "../../secrets:/secrets:ro"
    ports:
      - "${TEST_API_HTTP_PORT:-3502}:${TEST_API_HTTP_PORT:-3502}"
      - "${TEST_API_GRPC_PORT:-50002}:${TEST_API_GRPC_PORT:-50002}"
    networks:
      - nebula-net

volumes:
  socket:

networks:
  nebula-net:
    external: true
    name: ${NEBULA_NETWORK_NAME:-nebula-net}
