services:
  # Dapr Placement Service
  dapr-placement:
    image: daprio/dapr:${DAPR_VERSION}
    container_name: ${DAPR_PLACEMENT_CONTAINER}
    restart: unless-stopped
    command: >
      ./placement
      --log-level=${DAPR_LOG_LEVEL}
      --port=${DAPR_PLACEMENT_INTERNAL_PORT}
      --metrics-port=${DAPR_PLACEMENT_METRICS_PORT}
      --healthz-port=${DAPR_PLACEMENT_HEALTH_PORT}
    ports:
      - "${DAPR_PLACEMENT_PORT}:${DAPR_PLACEMENT_INTERNAL_PORT}"
      - "${DAPR_PLACEMENT_METRICS_HOST_PORT}:${DAPR_PLACEMENT_METRICS_PORT}"
      - "${DAPR_PLACEMENT_HEALTH_HOST_PORT}:${DAPR_PLACEMENT_HEALTH_PORT}"
    networks:
      - dapr-pluggable-net
    volumes:
      - dapr-placement-data:/var/run/dapr
    healthcheck:
      test: ["CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:${DAPR_PLACEMENT_HEALTH_PORT}/healthz || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Dapr Scheduler Service
  dapr-scheduler:
    image: daprio/dapr:${DAPR_VERSION}
    container_name: ${DAPR_SCHEDULER_CONTAINER}
    restart: unless-stopped
    command: >
      ./scheduler
      --log-level=${DAPR_LOG_LEVEL}
      --port=${DAPR_SCHEDULER_INTERNAL_PORT}
      --metrics-port=${DAPR_SCHEDULER_METRICS_PORT}
      --healthz-port=${DAPR_SCHEDULER_HEALTH_PORT}
      --etcd-data-dir=/var/lock/dapr/scheduler
      --etcd-client-port=${DAPR_ETCD_PORT}
      --override-broadcast-host-port=localhost:${DAPR_SCHEDULER_PORT}
    ports:
      - "${DAPR_SCHEDULER_PORT}:${DAPR_SCHEDULER_INTERNAL_PORT}"
      - "${DAPR_SCHEDULER_METRICS_HOST_PORT}:${DAPR_SCHEDULER_METRICS_PORT}"
      - "${DAPR_SCHEDULER_HEALTH_HOST_PORT}:${DAPR_SCHEDULER_HEALTH_PORT}"
      - "${DAPR_ETCD_HOST_PORT}:${DAPR_ETCD_PORT}"
    networks:
      - dapr-pluggable-net
    volumes:
      - dapr-scheduler-data:/var/lock
    environment:
      - ETCD_UNSUPPORTED_ARCH=${DAPR_ETCD_UNSUPPORTED_ARCH:-arm64}
    healthcheck:
      test: ["CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:${DAPR_SCHEDULER_HEALTH_PORT:-8091}/healthz || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Zipkin for Dapr Tracing
  dapr-zipkin:
    image: openzipkin/zipkin:${DAPR_ZIPKIN_VERSION:-latest}
    container_name: ${DAPR_ZIPKIN_CONTAINER:-dapr-zipkin}
    restart: unless-stopped
    ports:
      - "${DAPR_ZIPKIN_PORT:-9411}:9411"
    networks:
      - dapr-pluggable-net
    environment:
      - STORAGE_TYPE=${DAPR_ZIPKIN_STORAGE:-mem}
      - JAVA_OPTS=${DAPR_ZIPKIN_JAVA_OPTS:--Xms128m -Xmx512m -XX:+ExitOnOutOfMemoryError}
    volumes:
      - dapr-zipkin-data:/zipkin/data
    healthcheck:
      test: ["CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:9411/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3

# External network created by environment setup
networks:
  dapr-pluggable-net:
    external: true

# Named volumes for persistence
volumes:
  dapr-placement-data:
    driver: local
    name: ${DAPR_PLACEMENT_VOLUME:-dapr-placement-data}
  dapr-scheduler-data:
    driver: local
    name: ${DAPR_SCHEDULER_VOLUME:-dapr-scheduler-data}
  dapr-zipkin-data:
    driver: local
    name: ${DAPR_ZIPKIN_VOLUME:-dapr-zipkin-data}
